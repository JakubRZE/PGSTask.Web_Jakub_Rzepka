@model UserTasksVM
@using X.PagedList.Mvc.Core; 
@using X.PagedList; 


@{
    ViewData["Title"] = "Task list";
}



<div class="row text-light mt-4 mb-2 pt-5">
    <div class="col-12 text-center">
        <h1>Task List</h1>
    </div>
</div>
<div class="row">
    <div class="col-12 text-center">
        <form asp-controller="UserTask" asp-action="Create" method="post" id="submitForm">
            @Html.AntiForgeryToken()
            <div class="input-group p-5">
                <input type="text" class="form-control w-75 rounded p-4" placeholder="Enter your task..." name="Description" id="submitInput">
                <span asp-validation-for="Description" class="text-danger"></span>
                <div class="w-25 text-right">
                    <button type="button" class="btn btn-warning w-75 font-weight-bold customBtn" id="submitBtn">Add</button>
                </div>
            </div>
        </form>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card p-2 mb-1 customCard ">
            <form asp-controller="UserTask" asp-action="Index" method="get">
                <div class="input-group">
                    <input type="hidden" name="column" value="@Model.CurrentColumn">
                    <input type="hidden" name="sortOrder" value="@Model.SortOrder">
                    <input type="text" class="form-control rounded mr-5" placeholder="Task description..." name="searchString" value="@Model.CurrentFilter">
                    <div class="mr-3">
                        <button class="btn btn-secondary" type="submit">Search</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <table class="table table-hover bg-light m-0">
                <thead class="bg-dark text-light">
                    <tr>
                        <td class="max-width-5 text-center">
                            @Html.ActionLink("Description", "Index", new { sortOrder = Model.GetInverseSortOrder(), column = nameof(UserTask.Description), searchString = Model.CurrentFilter }, new { @class = "customLink" })
                        </td>
                        <td class="text-right max-width-03 text-right pr-4">
                            @Html.ActionLink("Created at", "Index", new { sortOrder = Model.GetInverseSortOrder(), column = nameof(UserTask.CreatedAt), searchString = Model.CurrentFilter }, new { @class = "customLink" })
                        </td>
                        <td class="border-left text-center max-width-02"></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model.Tasks)
                    {
                        <tr>
                            <td class="max-width-5">
                                <input class="w-100 customInput" value="@task.Description" readonly name="@task.Id" />
                            </td>
                            <td class="text-right text-pale max-width-03">
                                <span class="border-left pl-1">@Html.DisplayFor(modelItem => task.CreatedAt)</span>
                            </td>
                            <td class="border-left text-center max-width-02">
                                    <i class="fas fa-edit customEditIcon" name="@task.Id"></i>
                                    <i class="fas fa-check-circle customDoneIcon" id="@task.Id" style="display:none;"></i>
                                <form asp-controller="UserTask" asp-action="Delete" method="post" class="mr-2 ml-2 d-inline customForm" name="@task.Id">
                                    <input type="hidden" name="Id" value="@task.Id" readonly />
                                    <button type="submit" class="plain"><i class="fas fa-trash-alt customBinIcon"></i></button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@Html.PagedListPager((IPagedList)Model.Tasks, page => Url.Action("Index", new { page }))

